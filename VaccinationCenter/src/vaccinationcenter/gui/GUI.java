/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vaccinationcenter.gui;

import OSPABA.ISimDelegate;
import OSPABA.SimState;
import OSPABA.Simulation;
import simulation.MySimulation;

/**
 *
 * @author davidpavlicko
 */
public class GUI extends javax.swing.JFrame implements ISimDelegate {

//    private Thread thread;
    private MySimulation simulation;
    private int showNth;
    private Chart experimentChart;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        
        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(false);
        this.jButtonStart.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jTextFieldReplications = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButtonStart = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jButtonPause = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxMaxSpeed = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldWorkers = new javax.swing.JTextField();
        jTextFieldDoctors = new javax.swing.JTextField();
        jTextFieldNurses = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldOrderedPeople = new javax.swing.JTextField();
        jSliderSpeed = new javax.swing.JSlider();
        jCheckBoxValidation = new javax.swing.JCheckBox();
        jCheckBoxEmpiricExperiment = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanelChartExperiment = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jCheckBoxDoctorsExperiment = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldMinDoctors = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldMaxDoctors = new javax.swing.JTextField();
        jTextFieldShowNth = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldWorkerWait = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldWorkerQueue = new javax.swing.JTextField();
        jTextFieldWorkerEfficiency = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldWorkerWaitInterval = new javax.swing.JTextField();
        jTextFieldWorkerQueueInterval = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldWorkerEfficiencyInterval = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldDoctorWait = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldDoctorQueue = new javax.swing.JTextField();
        jTextFieldDoctorEfficiency = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextFieldDoctorWaitInterval = new javax.swing.JTextField();
        jTextFieldDoctorQueueInterval = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextFieldDoctorEfficiencyInterval = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldNurseWait = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldNurseQueue = new javax.swing.JTextField();
        jTextFieldNurseEfficiency = new javax.swing.JTextField();
        jTextFieldNurseWaitInterval = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldNurseQueueInterval = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldNurseEfficiencyInterval = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jTextFieldWaitingRoomInterval = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldWaitingRoom = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldTime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jTextFieldRefillmentQueueInterval = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jTextFieldRefillmentQueue = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jTextFieldLunchLengthInterval = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextFieldLunchLength = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jProgressBarReplications = new javax.swing.JProgressBar();
        jTextFieldTimeInterval = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextFieldArrivals = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRegistrationOverview = new javax.swing.JTextArea();
        jLabelRegistrationQueue = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaExaminationOverview = new javax.swing.JTextArea();
        jLabelExaminationQueue = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaVaccinationOverview = new javax.swing.JTextArea();
        jLabelVaccinationQueue = new javax.swing.JLabel();
        jLabelRefillment = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabelWaitings = new javax.swing.JLabel();
        jProgressBarEvents = new javax.swing.JProgressBar();
        jLabel40 = new javax.swing.JLabel();
        jTextFieldReplicationTime = new javax.swing.JTextField();
        jLabelArrivals = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabelLunch = new javax.swing.JLabel();
        jLabelVaccinationToWaitingRoom = new javax.swing.JLabel();
        jLabelExaminationVaccination = new javax.swing.JLabel();
        jLabelRegistrationExamination = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation Settings"));

        jTextFieldReplications.setText("100");
        jTextFieldReplications.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldReplicationsKeyReleased(evt);
            }
        });

        jLabel9.setText("Replications:");

        jButtonStart.setText("Start");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jButtonStop.setBackground(new java.awt.Color(255, 153, 153));
        jButtonStop.setText("Stop");
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });

        jButtonPause.setBackground(new java.awt.Color(255, 255, 204));
        jButtonPause.setText("Pause");
        jButtonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPauseActionPerformed(evt);
            }
        });

        jLabel1.setText("Speed:");

        jCheckBoxMaxSpeed.setSelected(true);
        jCheckBoxMaxSpeed.setText("MAX");
        jCheckBoxMaxSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMaxSpeedActionPerformed(evt);
            }
        });

        jLabel2.setText("Number of workers:");

        jLabel3.setText("Number of doctors:");

        jLabel4.setText("Number of nurses:");

        jTextFieldWorkers.setText("5");

        jTextFieldDoctors.setText("6");

        jTextFieldNurses.setText("3");
        jTextFieldNurses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNursesActionPerformed(evt);
            }
        });

        jLabel5.setText("Ordered people:");

        jTextFieldOrderedPeople.setText("540");

        jSliderSpeed.setMajorTickSpacing(9);
        jSliderSpeed.setMaximum(50);
        jSliderSpeed.setMinimum(1);
        jSliderSpeed.setValue(1);
        jSliderSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSpeedStateChanged(evt);
            }
        });

        jCheckBoxValidation.setText("Validation mode");

        jCheckBoxEmpiricExperiment.setText("Empiric arrivals");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldReplications, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxMaxSpeed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldOrderedPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldNurses, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBoxEmpiricExperiment)
                                        .addGap(0, 5, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jButtonStop)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBoxValidation))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonStart)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPause)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldWorkers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldNurses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxEmpiricExperiment)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCheckBoxMaxSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(jTextFieldOrderedPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStart)
                    .addComponent(jButtonPause)
                    .addComponent(jButtonStop)
                    .addComponent(jCheckBoxValidation))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation experiment"));

        jPanelChartExperiment.setBorder(javax.swing.BorderFactory.createTitledBorder("Average examination queue size chart"));
        jPanelChartExperiment.setLayout(new javax.swing.BoxLayout(jPanelChartExperiment, javax.swing.BoxLayout.LINE_AXIS));

        jLabel22.setText("Replications per point:");

        jCheckBoxDoctorsExperiment.setText("Doctor's Experiment");
        jCheckBoxDoctorsExperiment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDoctorsExperimentActionPerformed(evt);
            }
        });

        jLabel23.setText("Min doctors:");

        jTextFieldMinDoctors.setText("10");
        jTextFieldMinDoctors.setEnabled(false);
        jTextFieldMinDoctors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMinDoctorsKeyReleased(evt);
            }
        });

        jLabel24.setText("Max doctors:");

        jTextFieldMaxDoctors.setText("15");
        jTextFieldMaxDoctors.setEnabled(false);
        jTextFieldMaxDoctors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMaxDoctorsKeyReleased(evt);
            }
        });

        jTextFieldShowNth.setText("10");
        jTextFieldShowNth.setEnabled(false);
        jTextFieldShowNth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldShowNthKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jCheckBoxDoctorsExperiment, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldShowNth, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMinDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMaxDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
            .addComponent(jPanelChartExperiment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxDoctorsExperiment)
                    .addComponent(jLabel22)
                    .addComponent(jTextFieldShowNth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jTextFieldMinDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jTextFieldMaxDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelChartExperiment, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation Statistics"));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Registration"));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Queue waiting");

        jTextFieldWorkerWait.setEditable(false);
        jTextFieldWorkerWait.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWorkerWait.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerWait.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerWait.setText("0.000000");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Queue length");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Efficiency");

        jTextFieldWorkerQueue.setEditable(false);
        jTextFieldWorkerQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWorkerQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerQueue.setText("0.000000");

        jTextFieldWorkerEfficiency.setEditable(false);
        jTextFieldWorkerEfficiency.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWorkerEfficiency.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerEfficiency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerEfficiency.setText("0.000000");

        jLabel8.setText("Confidence interval");

        jTextFieldWorkerWaitInterval.setEditable(false);
        jTextFieldWorkerWaitInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldWorkerWaitInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerWaitInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerWaitInterval.setText("< Nan ; Nan >");

        jTextFieldWorkerQueueInterval.setEditable(false);
        jTextFieldWorkerQueueInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldWorkerQueueInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerQueueInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerQueueInterval.setText("< Nan ; Nan >");

        jLabel10.setText("Confidence interval");

        jTextFieldWorkerEfficiencyInterval.setEditable(false);
        jTextFieldWorkerEfficiencyInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldWorkerEfficiencyInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWorkerEfficiencyInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWorkerEfficiencyInterval.setText("< Nan ; Nan >");

        jLabel21.setText("Confidence interval");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldWorkerWait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jTextFieldWorkerWaitInterval))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTextFieldWorkerQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWorkerQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTextFieldWorkerEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWorkerEfficiencyInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldWorkerWait, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerWaitInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldWorkerEfficiencyInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Examination"));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Queue waiting");

        jTextFieldDoctorWait.setEditable(false);
        jTextFieldDoctorWait.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldDoctorWait.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorWait.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorWait.setText("0.000000");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Queue length");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Efficiency");

        jTextFieldDoctorQueue.setEditable(false);
        jTextFieldDoctorQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldDoctorQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorQueue.setText("0.000000");

        jTextFieldDoctorEfficiency.setEditable(false);
        jTextFieldDoctorEfficiency.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldDoctorEfficiency.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorEfficiency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorEfficiency.setText("0.000000");

        jLabel25.setText("Confidence interval");

        jTextFieldDoctorWaitInterval.setEditable(false);
        jTextFieldDoctorWaitInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldDoctorWaitInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorWaitInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorWaitInterval.setText("< Nan ; Nan >");

        jTextFieldDoctorQueueInterval.setEditable(false);
        jTextFieldDoctorQueueInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldDoctorQueueInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorQueueInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorQueueInterval.setText("< Nan ; Nan >");

        jLabel26.setText("Confidence interval");

        jLabel27.setText("Confidence interval");

        jTextFieldDoctorEfficiencyInterval.setEditable(false);
        jTextFieldDoctorEfficiencyInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldDoctorEfficiencyInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldDoctorEfficiencyInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDoctorEfficiencyInterval.setText("< Nan ; Nan >");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDoctorWait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(jTextFieldDoctorWaitInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextFieldDoctorQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDoctorQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextFieldDoctorEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDoctorEfficiencyInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDoctorWait, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorWaitInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDoctorEfficiencyInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Vaccination"));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Queue waiting");

        jTextFieldNurseWait.setEditable(false);
        jTextFieldNurseWait.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldNurseWait.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseWait.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseWait.setText("0.000000");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Queue length");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Efficiency");

        jTextFieldNurseQueue.setEditable(false);
        jTextFieldNurseQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldNurseQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseQueue.setText("0.000000");

        jTextFieldNurseEfficiency.setEditable(false);
        jTextFieldNurseEfficiency.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldNurseEfficiency.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseEfficiency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseEfficiency.setText("0.000000");

        jTextFieldNurseWaitInterval.setEditable(false);
        jTextFieldNurseWaitInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldNurseWaitInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseWaitInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseWaitInterval.setText("< Nan ; Nan >");

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Confidence interval");

        jTextFieldNurseQueueInterval.setEditable(false);
        jTextFieldNurseQueueInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldNurseQueueInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseQueueInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseQueueInterval.setText("< Nan ; Nan >");

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Confidence interval");

        jTextFieldNurseEfficiencyInterval.setEditable(false);
        jTextFieldNurseEfficiencyInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldNurseEfficiencyInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldNurseEfficiencyInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNurseEfficiencyInterval.setText("< Nan ; Nan >");

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Confidence interval");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldNurseWait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jTextFieldNurseWaitInterval))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTextFieldNurseQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNurseQueueInterval)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTextFieldNurseEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNurseEfficiencyInterval))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(9, 9, 9))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNurseWait, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseWaitInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNurseEfficiencyInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Waiting Room"));

        jTextFieldWaitingRoomInterval.setEditable(false);
        jTextFieldWaitingRoomInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldWaitingRoomInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWaitingRoomInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWaitingRoomInterval.setText("< Nan ; Nan >");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Waiting");

        jTextFieldWaitingRoom.setEditable(false);
        jTextFieldWaitingRoom.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldWaitingRoom.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldWaitingRoom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWaitingRoom.setText("0.000000");

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Confidence interval");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldWaitingRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldWaitingRoomInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldWaitingRoomInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextFieldWaitingRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jTextFieldTime.setEditable(false);
        jTextFieldTime.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldTime.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldTime.setText("08:00:00");

        jLabel6.setText("Simulation finish time");

        jLabel7.setText("Confidence interval");

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Refillment"));

        jTextFieldRefillmentQueueInterval.setEditable(false);
        jTextFieldRefillmentQueueInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldRefillmentQueueInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldRefillmentQueueInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldRefillmentQueueInterval.setText("< Nan ; Nan >");

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Queue");

        jTextFieldRefillmentQueue.setEditable(false);
        jTextFieldRefillmentQueue.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldRefillmentQueue.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldRefillmentQueue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldRefillmentQueue.setText("0.000000");

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("Confidence interval");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldRefillmentQueue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldRefillmentQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldRefillmentQueueInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextFieldRefillmentQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Lunch"));

        jTextFieldLunchLengthInterval.setEditable(false);
        jTextFieldLunchLengthInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldLunchLengthInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldLunchLengthInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldLunchLengthInterval.setText("< Nan ; Nan >");

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Length");

        jTextFieldLunchLength.setEditable(false);
        jTextFieldLunchLength.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldLunchLength.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldLunchLength.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldLunchLength.setText("0.000000");

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Confidence interval");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldLunchLength, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldLunchLengthInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldLunchLengthInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextFieldLunchLength, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jTextFieldTimeInterval.setEditable(false);
        jTextFieldTimeInterval.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldTimeInterval.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldTimeInterval.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldTimeInterval.setText("< Nan ; Nan >");

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Arrivals");

        jTextFieldArrivals.setEditable(false);
        jTextFieldArrivals.setBackground(new java.awt.Color(153, 255, 255));
        jTextFieldArrivals.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextFieldArrivals.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldArrivals.setText("0.000000");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTimeInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldArrivals, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jProgressBarReplications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jProgressBarReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldTimeInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldArrivals, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Replication Detail"));
        jPanel1.setDoubleBuffered(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Registration"));

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Registration overview"));
        jPanel11.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaRegistrationOverview.setEditable(false);
        jTextAreaRegistrationOverview.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaRegistrationOverview.setColumns(15);
        jTextAreaRegistrationOverview.setRows(5);
        jTextAreaRegistrationOverview.setBorder(null);
        jScrollPane1.setViewportView(jTextAreaRegistrationOverview);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
        );

        jLabelRegistrationQueue.setText("Queue: 0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRegistrationQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRegistrationQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Examination"));

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Examination overview"));
        jPanel14.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaExaminationOverview.setEditable(false);
        jTextAreaExaminationOverview.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaExaminationOverview.setColumns(15);
        jTextAreaExaminationOverview.setRows(5);
        jScrollPane3.setViewportView(jTextAreaExaminationOverview);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
        );

        jLabelExaminationQueue.setText("Queue: 0");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelExaminationQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelExaminationQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Vaccination"));

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Vaccination overview"));
        jPanel17.setPreferredSize(new java.awt.Dimension(170, 50));

        jTextAreaVaccinationOverview.setEditable(false);
        jTextAreaVaccinationOverview.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaVaccinationOverview.setColumns(15);
        jTextAreaVaccinationOverview.setRows(5);
        jScrollPane5.setViewportView(jTextAreaVaccinationOverview);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
        );

        jLabelVaccinationQueue.setText("Queue: 0");

        jLabelRefillment.setText("Moving to refillment room: 0 , Queue: 0 , Refilling: 0, Moving back: 0");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabelVaccinationQueue, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabelRefillment, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelVaccinationQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRefillment)
                .addContainerGap())
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Waiting room"));

        jLabelWaitings.setText("Waiting: 0");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelWaitings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelWaitings)
                .addGap(53, 53, 53))
        );

        jLabel40.setText("Time");

        jTextFieldReplicationTime.setEditable(false);
        jTextFieldReplicationTime.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldReplicationTime.setText("08:00:00");

        jLabelArrivals.setText("Arrivals: 0");

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder("Lunch"));

        jLabelLunch.setText("Moving to canteen: 0, Eating: 0, Moving back: 0");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelLunch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelLunch)
                .addGap(53, 53, 53))
        );

        jLabelVaccinationToWaitingRoom.setText("Moving from vaccination to waiting room: 0");

        jLabelExaminationVaccination.setText("Moving from examination to vaccination: 0");

        jLabelRegistrationExamination.setText("Moving from registration to examination: 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldReplicationTime, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelArrivals, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jProgressBarEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelVaccinationToWaitingRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelExaminationVaccination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelRegistrationExamination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel40)
                        .addComponent(jTextFieldReplicationTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelArrivals))
                    .addComponent(jProgressBarEvents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRegistrationExamination)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelExaminationVaccination)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelVaccinationToWaitingRoom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        
        this.jTextFieldReplications.setEnabled(false);
        this.jTextFieldWorkers.setEnabled(false);
        this.jTextFieldDoctors.setEnabled(false);
        this.jTextFieldNurses.setEnabled(false);
        this.jTextFieldOrderedPeople.setEnabled(false);
        this.jButtonPause.setEnabled(true);
        this.jButtonStop.setEnabled(true);
        this.jButtonStart.setEnabled(false);
        this.jCheckBoxDoctorsExperiment.setEnabled(false);
        
        this.jTextFieldShowNth.setEnabled(false);
        this.jTextFieldMinDoctors.setEnabled(false);
        this.jTextFieldMaxDoctors.setEnabled(false);
        
        boolean paused = false;
        try {
            paused = this.simulation.isPaused();
        } catch (Exception e) {
        }
        
        if (paused) {
            this.simulation.resumeSimulation();
        } else {
            
            this.jTextFieldTime.setText("08:00:00");
            this.jTextFieldArrivals.setText(String.format("%.4f", 0.0));
            this.jProgressBarReplications.setValue(0);
            this.jTextFieldWorkerWait.setText(String.format("%.6f", 0.0));
            this.jTextFieldWorkerQueue.setText("" + 0);
            this.jTextFieldWorkerEfficiency.setText(String.format("%.4f", 0.0) + "%");
            this.jTextFieldDoctorWait.setText(String.format("%.6f", 0.0));
            this.jTextFieldDoctorQueue.setText("" + 0);
            this.jTextFieldDoctorEfficiency.setText(String.format("%.4f", 0.0) + "%");
            this.jTextFieldNurseWait.setText(String.format("%.6f", 0.0));
            this.jTextFieldNurseQueue.setText("" + 0);
            this.jTextFieldNurseEfficiency.setText(String.format("%.4f", 0.0) + "%");
            this.jTextFieldWaitingRoom.setText(String.format("%.6f", 0.0));
            this.jTextFieldRefillmentQueue.setText(String.format("%.6f", 0.0));
            this.jTextFieldLunchLength.setText(String.format("%.6f", 0.0));
            
            this.jTextFieldTimeInterval.setText("< Nan ; Nan >");
            this.jTextFieldWorkerWaitInterval.setText("< Nan ; Nan >");
            this.jTextFieldWorkerQueueInterval.setText("< Nan ; Nan >");
            this.jTextFieldWorkerEfficiencyInterval.setText("< Nan ; Nan >");
            this.jTextFieldDoctorWaitInterval.setText("< Nan ; Nan >");
            this.jTextFieldDoctorQueueInterval.setText("< Nan ; Nan >");
            this.jTextFieldDoctorEfficiencyInterval.setText("< Nan ; Nan >");
            this.jTextFieldNurseWaitInterval.setText("< Nan ; Nan >");
            this.jTextFieldNurseQueueInterval.setText("< Nan ; Nan >");
            this.jTextFieldNurseEfficiencyInterval.setText("< Nan ; Nan >");
            this.jTextFieldWaitingRoomInterval.setText("< Nan ; Nan >");
            this.jTextFieldRefillmentQueueInterval.setText("< Nan ; Nan >");
            this.jTextFieldLunchLengthInterval.setText("< Nan ; Nan >");
            
            this.jTextFieldReplicationTime.setText("08:00:00");
            this.jLabelArrivals.setText("Arrivals: " + 0);
            this.jProgressBarEvents.setValue(0);
            this.jLabelRegistrationQueue.setText("Queue: " + 0);
            this.jTextAreaRegistrationOverview.setText("");
            this.jLabelRegistrationExamination.setText("Moving from registration to examination: 0");
            this.jLabelExaminationQueue.setText("Queue: " + 0);
            this.jTextAreaExaminationOverview.setText("");
            this.jLabelExaminationVaccination.setText("Moving from examination to vaccination: 0");
            this.jLabelVaccinationQueue.setText("Queue: " + 0);
            this.jTextAreaVaccinationOverview.setText("");
            this.jLabelRefillment.setText("Moving to refillment room: " + 0 + ", Queue: " + 0 + ", Refilling: " + 0 + ", Moving back: " + 0);
            this.jLabelVaccinationToWaitingRoom.setText("Moving from vaccination to waiting room: 0");
            this.jLabelWaitings.setText("Waiting: " + 0 + ", Departures: " + 0);
            this.jLabelLunch.setText("Moving to canteen: " + 0 + ", Eating: " + 0 + ", Moving back: " + 0);
        
            int replications = Integer.valueOf(this.jTextFieldReplications.getText());
            this.showNth = Integer.valueOf(this.jTextFieldShowNth.getText());
            double speed = Double.valueOf(this.jSliderSpeed.getValue());
            boolean maxSpeed = this.jCheckBoxMaxSpeed.isSelected();
            int workers = Integer.valueOf(this.jTextFieldWorkers.getText());
            int doctors = Integer.valueOf(this.jTextFieldDoctors.getText());
            int nurses = Integer.valueOf(this.jTextFieldNurses.getText());
            int orderedPeople = Integer.valueOf(this.jTextFieldOrderedPeople.getText());
            
            boolean experiment = this.jCheckBoxDoctorsExperiment.isSelected();
            boolean validation = this.jCheckBoxValidation.isSelected();
            boolean empiricArrivals = this.jCheckBoxEmpiricExperiment.isSelected();
            
            if (experiment) {
                doctors = Integer.valueOf(this.jTextFieldMinDoctors.getText());
            }
            
            this.simulation = new MySimulation(orderedPeople, workers, doctors, nurses, validation, empiricArrivals);
//            System.out.println("VALIDATION MODE IS " + (this.simulation.isValidation() ? "ON" : "OFF") + "!\n");
            this.simulation.registerDelegate(this);
            if (!maxSpeed) {
                this.simulation.setSimSpeed(speed, 1d/speed);
            }
            
            this.experimentChart = new Chart("Average queue for doctors", "Number of doctors", "Average queue", () -> this.simulation.examination().getPersonal().size(), () -> this.simulation.examination().getQueueStat().mean()); 
            this.jPanelChartExperiment.removeAll();
            this.jPanelChartExperiment.add(this.experimentChart.getPlot());         
            this.jPanelChartExperiment.validate(); 
            
            if (this.jCheckBoxDoctorsExperiment.isSelected()) {
                this.experimentChart.startThreads();
            }
            
            this.simulation.simulateAsync(replications); 
        }

        
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed

        this.jTextFieldReplications.setEnabled(true);
        this.jTextFieldWorkers.setEnabled(true);
        this.jTextFieldDoctors.setEnabled(true);
        this.jTextFieldNurses.setEnabled(true);
        this.jTextFieldOrderedPeople.setEnabled(true);
        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(false);
        this.jButtonStart.setEnabled(true);
        this.jCheckBoxDoctorsExperiment.setEnabled(true);
        
        if (this.jCheckBoxDoctorsExperiment.isSelected()) {
            this.jTextFieldShowNth.setEnabled(true);
            this.jTextFieldMinDoctors.setEnabled(true);
            this.jTextFieldMaxDoctors.setEnabled(true);
        } else {
            this.jTextFieldShowNth.setEnabled(false);
            this.jTextFieldMinDoctors.setEnabled(false);
            this.jTextFieldMaxDoctors.setEnabled(false);
        }

        if (this.simulation.isPaused()) {
            this.simulation.resumeSimulation();
        }
        this.simulation.stopSimulation();  
        
        if (this.jCheckBoxDoctorsExperiment.isSelected()) {
            this.experimentChart.stopThreads();
        }
        
    }//GEN-LAST:event_jButtonStopActionPerformed

    private void jButtonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPauseActionPerformed

        this.jButtonPause.setEnabled(false);
        this.jButtonStop.setEnabled(true);
        this.jButtonStart.setEnabled(true);
        
        this.simulation.pauseSimulation();
        
    }//GEN-LAST:event_jButtonPauseActionPerformed

    private void jTextFieldNursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNursesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNursesActionPerformed

    private void jCheckBoxMaxSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMaxSpeedActionPerformed
        
        try {
            if (this.jCheckBoxMaxSpeed.isSelected()) {
                this.simulation.setMaxSimSpeed();
            } else {
                this.simulation.setSimSpeed(this.jSliderSpeed.getValue(), 1d/this.jSliderSpeed.getValue());
            }
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jCheckBoxMaxSpeedActionPerformed

    private void jCheckBoxDoctorsExperimentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDoctorsExperimentActionPerformed
        
        if (this.jCheckBoxDoctorsExperiment.isSelected()) {
            this.jTextFieldShowNth.setEnabled(true);
            this.jTextFieldMinDoctors.setEnabled(true);
            this.jTextFieldMaxDoctors.setEnabled(true);
        } else {
            this.jTextFieldShowNth.setEnabled(false);
            this.jTextFieldMinDoctors.setEnabled(false);
            this.jTextFieldMaxDoctors.setEnabled(false);
        }
        
    }//GEN-LAST:event_jCheckBoxDoctorsExperimentActionPerformed

    private void jSliderSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSpeedStateChanged

        try {
            this.simulation.setSimSpeed(this.jSliderSpeed.getValue(), 1d/this.jSliderSpeed.getValue());
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jSliderSpeedStateChanged

    private void jTextFieldReplicationsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldReplicationsKeyReleased
         
        int replications = Integer.valueOf(this.jTextFieldReplications.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        int dif = max - min + 1;
        this.jTextFieldShowNth.setText("" + (int) Math.floor((double) replications / dif));
        
    }//GEN-LAST:event_jTextFieldReplicationsKeyReleased

    private void jTextFieldMaxDoctorsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMaxDoctorsKeyReleased

        int nth = Integer.valueOf(this.jTextFieldShowNth.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        if (max <= min) {
            min = max - 1;
            this.jTextFieldMinDoctors.setText("" + (int) (min));
        }
        
        int dif = max - min + 1;
        this.jTextFieldReplications.setText("" + (int) (dif * nth));
        
    }//GEN-LAST:event_jTextFieldMaxDoctorsKeyReleased

    private void jTextFieldMinDoctorsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMinDoctorsKeyReleased

        int nth = Integer.valueOf(this.jTextFieldShowNth.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        if (max <= min) {
            max = min + 1;
            this.jTextFieldMaxDoctors.setText("" + (int) (max));
        }
        
        int dif = max - min + 1;
        this.jTextFieldReplications.setText("" + (int) (dif * nth));
        
    }//GEN-LAST:event_jTextFieldMinDoctorsKeyReleased

    private void jTextFieldShowNthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldShowNthKeyReleased
       
        int nth = Integer.valueOf(this.jTextFieldShowNth.getText());
        int min = Integer.valueOf(this.jTextFieldMinDoctors.getText());
        int max = Integer.valueOf(this.jTextFieldMaxDoctors.getText());
        
        int dif = max - min + 1;
        this.jTextFieldReplications.setText("" + (int) (dif * nth));
        
    }//GEN-LAST:event_jTextFieldShowNthKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPause;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JCheckBox jCheckBoxDoctorsExperiment;
    private javax.swing.JCheckBox jCheckBoxEmpiricExperiment;
    private javax.swing.JCheckBox jCheckBoxMaxSpeed;
    private javax.swing.JCheckBox jCheckBoxValidation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelArrivals;
    private javax.swing.JLabel jLabelExaminationQueue;
    private javax.swing.JLabel jLabelExaminationVaccination;
    private javax.swing.JLabel jLabelLunch;
    private javax.swing.JLabel jLabelRefillment;
    private javax.swing.JLabel jLabelRegistrationExamination;
    private javax.swing.JLabel jLabelRegistrationQueue;
    private javax.swing.JLabel jLabelVaccinationQueue;
    private javax.swing.JLabel jLabelVaccinationToWaitingRoom;
    private javax.swing.JLabel jLabelWaitings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelChartExperiment;
    private javax.swing.JProgressBar jProgressBarEvents;
    private javax.swing.JProgressBar jProgressBarReplications;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSlider jSliderSpeed;
    private javax.swing.JTextArea jTextAreaExaminationOverview;
    private javax.swing.JTextArea jTextAreaRegistrationOverview;
    private javax.swing.JTextArea jTextAreaVaccinationOverview;
    private javax.swing.JTextField jTextFieldArrivals;
    private javax.swing.JTextField jTextFieldDoctorEfficiency;
    private javax.swing.JTextField jTextFieldDoctorEfficiencyInterval;
    private javax.swing.JTextField jTextFieldDoctorQueue;
    private javax.swing.JTextField jTextFieldDoctorQueueInterval;
    private javax.swing.JTextField jTextFieldDoctorWait;
    private javax.swing.JTextField jTextFieldDoctorWaitInterval;
    private javax.swing.JTextField jTextFieldDoctors;
    private javax.swing.JTextField jTextFieldLunchLength;
    private javax.swing.JTextField jTextFieldLunchLengthInterval;
    private javax.swing.JTextField jTextFieldMaxDoctors;
    private javax.swing.JTextField jTextFieldMinDoctors;
    private javax.swing.JTextField jTextFieldNurseEfficiency;
    private javax.swing.JTextField jTextFieldNurseEfficiencyInterval;
    private javax.swing.JTextField jTextFieldNurseQueue;
    private javax.swing.JTextField jTextFieldNurseQueueInterval;
    private javax.swing.JTextField jTextFieldNurseWait;
    private javax.swing.JTextField jTextFieldNurseWaitInterval;
    private javax.swing.JTextField jTextFieldNurses;
    private javax.swing.JTextField jTextFieldOrderedPeople;
    private javax.swing.JTextField jTextFieldRefillmentQueue;
    private javax.swing.JTextField jTextFieldRefillmentQueueInterval;
    private javax.swing.JTextField jTextFieldReplicationTime;
    private javax.swing.JTextField jTextFieldReplications;
    private javax.swing.JTextField jTextFieldShowNth;
    private javax.swing.JTextField jTextFieldTime;
    private javax.swing.JTextField jTextFieldTimeInterval;
    private javax.swing.JTextField jTextFieldWaitingRoom;
    private javax.swing.JTextField jTextFieldWaitingRoomInterval;
    private javax.swing.JTextField jTextFieldWorkerEfficiency;
    private javax.swing.JTextField jTextFieldWorkerEfficiencyInterval;
    private javax.swing.JTextField jTextFieldWorkerQueue;
    private javax.swing.JTextField jTextFieldWorkerQueueInterval;
    private javax.swing.JTextField jTextFieldWorkerWait;
    private javax.swing.JTextField jTextFieldWorkerWaitInterval;
    private javax.swing.JTextField jTextFieldWorkers;
    // End of variables declaration//GEN-END:variables
    
    private String timeToString(double simTime) {
        String time = "";
        
        int hours = (int) Math.floor(simTime / 3600);
        int minutes = (int) Math.floor((simTime / 60) % 60);
        int seconds = (int) (simTime - (hours * 3600) - (minutes * 60));
        if (hours < 2) {
            time += ("0" + (8 + hours));
        } else {
            time += (8 + hours);
        }
        time += ":";
        if (minutes < 10) {
            time += ("0" + minutes);
        } else {
            time += minutes;
        }
        time += ":";
        if (seconds < 10) {
            time += ("0" + seconds);
        } else {
            time += seconds;
        }
        return time;
    }
    
    private void updateGui() {
        
        if (!this.jCheckBoxMaxSpeed.isSelected()) {
            this.jTextFieldReplicationTime.setText(timeToString(this.simulation.currentTime()));
            this.jProgressBarEvents.setValue((int) ((this.simulation.currentTime() / 32400d) * 100));

            this.jLabelArrivals.setText("Arrivals: " + this.simulation.enviroment().getArrivals());
            this.jLabelRegistrationQueue.setText("Queue: " + this.simulation.registration().getQueue().size());
            this.jTextAreaRegistrationOverview.setText(this.simulation.registration().getStaffStatus());
            this.jLabelRegistrationExamination.setText("Moving from registration to examination: " + this.simulation.vaccinationCenter().getComingRegExam());
            this.jLabelExaminationQueue.setText("Queue: " + this.simulation.registration().getQueue().size());
            this.jTextAreaExaminationOverview.setText(this.simulation.examination().getStaffStatus());
            this.jLabelExaminationVaccination.setText("Moving from examination to vaccination: " + this.simulation.vaccinationCenter().getComingExamVacc());
            this.jLabelVaccinationQueue.setText("Queue: " + this.simulation.vaccination().getQueue().size());
            this.jTextAreaVaccinationOverview.setText(this.simulation.vaccination().getStaffStatus());
            this.jLabelRefillment.setText("Moving to refillment room: " + this.simulation.syringes().getIncoming() + ", Queue: " + this.simulation.syringes().getQueue().size() + ", Refilling: " + this.simulation.syringes().getNursesInProcess() + ", Moving back: " + this.simulation.syringes().getOutcoming());
            this.jLabelVaccinationToWaitingRoom.setText("Moving from vaccination to waiting room: " + this.simulation.vaccinationCenter().getComingVaccWait());
            this.jLabelWaitings.setText("Waiting: " + this.simulation.waitingRoom().getCurrentFill() + ", Departures: " + this.simulation.enviroment().getDepartures());
            this.jLabelLunch.setText("Moving to canteen: " + this.simulation.canteen().getIncoming()+ ", Eating: " + this.simulation.canteen().getEating()+ ", Moving back: " + this.simulation.canteen().getOutcoming());
        }
        
        if ((this.simulation.currentReplication() + 1) % 1 == 0) {
            this.jTextFieldTime.setText(timeToString(this.simulation.getFinishTime().mean()));
            this.jTextFieldArrivals.setText(String.format("%.4f", this.simulation.getArrivals().mean()));
            this.jProgressBarReplications.setValue((int) (((this.simulation.currentReplication() + 1) / (double) this.simulation.replicationCount()) * 100));

            this.jTextFieldWorkerWait.setText(String.format("%.6f", this.simulation.getRegistrationWaitings().mean()));
            this.jTextFieldWorkerQueue.setText(String.format("%.6f", this.simulation.getRegistrationQueueLengths().mean()));
            this.jTextFieldWorkerEfficiency.setText(String.format("%.4f", this.simulation.getRegistrationEfficiency().mean() * 100) + "%");
            this.jTextFieldDoctorWait.setText(String.format("%.6f", this.simulation.getExaminationWaitings().mean()));
            this.jTextFieldDoctorQueue.setText(String.format("%.6f", this.simulation.getExaminationQueueLengths().mean()));
            this.jTextFieldDoctorEfficiency.setText(String.format("%.4f", this.simulation.getExaminationEfficiency().mean() * 100) + "%");
            this.jTextFieldNurseWait.setText(String.format("%.6f", this.simulation.getVaccinationWaitings().mean()));
            this.jTextFieldNurseQueue.setText(String.format("%.6f", this.simulation.getVaccinationQueueLengths().mean()));
            this.jTextFieldNurseEfficiency.setText(String.format("%.4f", this.simulation.getVaccinationEfficiency().mean() * 100) + "%");
            this.jTextFieldWaitingRoom.setText(String.format("%.6f", this.simulation.getWaitingRoomFilling().mean()));
            this.jTextFieldRefillmentQueue.setText(String.format("%.6f", this.simulation.getRefillQueueLengths().mean()));
            this.jTextFieldLunchLength.setText(String.format("%.4f", this.simulation.getLunchLengths().mean()));
            
            if ((this.simulation.currentReplication() >= 29 && !this.jCheckBoxDoctorsExperiment.isSelected() 
                    || (this.jCheckBoxDoctorsExperiment.isSelected() && this.simulation.currentReplication() % this.showNth >= 29))) {
                double[] finishTimeConfidenceINterval = this.simulation.getFinishTime().confidenceInterval_95();
                jTextFieldTimeInterval.setText("<" + timeToString(finishTimeConfidenceINterval[0]) + ";" + timeToString(finishTimeConfidenceINterval[1]) + ">");
                double[] registrationWaitingConfidenceInterval = this.simulation.getRegistrationWaitings().confidenceInterval_95();
                this.jTextFieldWorkerWaitInterval.setText("<" + String.format("%.4f", registrationWaitingConfidenceInterval[0]) + ";" + String.format("%.4f",registrationWaitingConfidenceInterval[1]) + ">");
                double[] registrationQueueConfidenceInterval = this.simulation.getRegistrationQueueLengths().confidenceInterval_95();
                this.jTextFieldWorkerQueueInterval.setText("<" + String.format("%.4f", registrationQueueConfidenceInterval[0]) + ";" + String.format("%.4f",registrationQueueConfidenceInterval[1]) + ">");
                double[] registrationEfficiencyConfidenceInterval = this.simulation.getRegistrationEfficiency().confidenceInterval_95();
                this.jTextFieldWorkerEfficiencyInterval.setText("<" + String.format("%.4f", registrationEfficiencyConfidenceInterval[0]) + ";" + String.format("%.4f",registrationEfficiencyConfidenceInterval[1]) + ">");
                double[] examinationWaitingConfidenceInterval = this.simulation.getExaminationWaitings().confidenceInterval_95();
                this.jTextFieldDoctorWaitInterval.setText("<" + String.format("%.4f", examinationWaitingConfidenceInterval[0]) + ";" + String.format("%.4f",examinationWaitingConfidenceInterval[1]) + ">");
                double[] examinationQueueConfidenceInterval = this.simulation.getExaminationQueueLengths().confidenceInterval_95();
                this.jTextFieldDoctorQueueInterval.setText("<" + String.format("%.4f", examinationQueueConfidenceInterval[0]) + ";" + String.format("%.4f",examinationQueueConfidenceInterval[1]) + ">");
                double[] examinationEfficiencyConfidenceInterval = this.simulation.getExaminationEfficiency().confidenceInterval_95();
                this.jTextFieldDoctorEfficiencyInterval.setText("<" + String.format("%.4f", examinationEfficiencyConfidenceInterval[0]) + ";" + String.format("%.4f",examinationEfficiencyConfidenceInterval[1]) + ">");
                double[] vaccinationWaitingConfidenceInterval = this.simulation.getVaccinationWaitings().confidenceInterval_95();
                this.jTextFieldNurseWaitInterval.setText("<" + String.format("%.4f", vaccinationWaitingConfidenceInterval[0]) + ";" + String.format("%.4f",vaccinationWaitingConfidenceInterval[1]) + ">");
                double[] vaccinationQueueConfidenceInterval = this.simulation.getVaccinationQueueLengths().confidenceInterval_95();
                this.jTextFieldNurseQueueInterval.setText("<" + String.format("%.4f", vaccinationQueueConfidenceInterval[0]) + ";" + String.format("%.4f",vaccinationQueueConfidenceInterval[1]) + ">");
                double[] vaccinationEfficiencyConfidenceInterval = this.simulation.getVaccinationEfficiency().confidenceInterval_95();
                this.jTextFieldNurseEfficiencyInterval.setText("<" + String.format("%.4f", vaccinationEfficiencyConfidenceInterval[0]) + ";" + String.format("%.4f",vaccinationEfficiencyConfidenceInterval[1]) + ">");
                double[] waitingConfidenceInterval = this.simulation.getWaitingRoomFilling().confidenceInterval_95();
                this.jTextFieldWaitingRoomInterval.setText("<" + String.format("%.4f", waitingConfidenceInterval[0]) + ";" + String.format("%.4f",waitingConfidenceInterval[1]) + ">");
                double[] refillmentConfidenceInterval = this.simulation.getRefillQueueLengths().confidenceInterval_95();
                this.jTextFieldRefillmentQueueInterval.setText("<" + String.format("%.4f", refillmentConfidenceInterval[0]) + ";" + String.format("%.4f",refillmentConfidenceInterval[1]) + ">");
                double[] lunchConfidenceInterval = this.simulation.getLunchLengths().confidenceInterval_95();
                this.jTextFieldLunchLengthInterval.setText("<" + String.format("%.2f", lunchConfidenceInterval[0]) + ";" + String.format("%.2f",lunchConfidenceInterval[1]) + ">");
            } else {
                this.jTextFieldDoctorWaitInterval.setText("< Nan ; Nan >");
                this.jTextFieldDoctorQueueInterval.setText("< Nan ; Nan >");
                this.jTextFieldDoctorEfficiencyInterval.setText("< Nan ; Nan >");
            }
        }
        
        if (this.jCheckBoxDoctorsExperiment.isSelected() && (this.simulation.currentReplication() + 1) % this.showNth == 0) {
            this.experimentChart.afterReplication();
            if (this.simulation.examination().getQuantity() <= Integer.valueOf(this.jTextFieldMaxDoctors.getText())) {
                this.simulation.examination().addQuantity();
                this.simulation.resetExaminationStats();
            }
        }
    }

    @Override
    public void simStateChanged(Simulation smltn, SimState ss) {
        switch(ss.name()) {
            case "running":
                break;
            case "stopped":
                this.jTextFieldReplications.setEnabled(true);
                this.jTextFieldWorkers.setEnabled(true);
                this.jTextFieldDoctors.setEnabled(true);
                this.jTextFieldNurses.setEnabled(true);
                this.jTextFieldOrderedPeople.setEnabled(true);
                this.jButtonPause.setEnabled(false);
                this.jButtonStop.setEnabled(false);
                this.jButtonStart.setEnabled(true);
                this.jCheckBoxDoctorsExperiment.setEnabled(true);

                if (this.jCheckBoxDoctorsExperiment.isSelected()) {
                    this.jTextFieldShowNth.setEnabled(true);
                    this.jTextFieldMinDoctors.setEnabled(true);
                    this.jTextFieldMaxDoctors.setEnabled(true);
                } else {
                    this.jTextFieldShowNth.setEnabled(false);
                    this.jTextFieldMinDoctors.setEnabled(false);
                    this.jTextFieldMaxDoctors.setEnabled(false);
                }
                this.jTextFieldShowNth.setEnabled(true);
                
                if (this.jCheckBoxDoctorsExperiment.isSelected()) {
                    this.experimentChart.stopThreads();
                }
                break;
            case "replicationRunning":
                if (!this.jCheckBoxMaxSpeed.isSelected()) {
                    this.simulation.setSimSpeed(this.jSliderSpeed.getValue(), 1d/this.jSliderSpeed.getValue());
                }
                break;
            case "replicationStopped":
                updateGui();
                break;
            case "paused":
                updateGui();
                break;
            case "unpaused":
                break;
            default:
                break;
        }
    }

    @Override
    public void refresh(Simulation smltn) {
        updateGui();
    }
}
